---
  - name: Install packages
    ansible.builtin.yum:
      name: "{{ item }}"
      state: present
    loop: "{{ redhat_packages }}"
      
  
  - name: Check if PostgreSQL is initialized
    ansible.builtin.stat:
      path: "{{ postgresql_init_path }}"
    register: postgres_data

  - name: Initialize PostgreSQL
    command: "postgresql-setup initdb"
    when: not postgres_data.stat.exists

  - name: Start and enable service
    ansible.builtin.service:
      name: postgresql
      state: started
      enabled: true

# ---
# - name: Install the repository RPM
#   yum:
#     name: "{{ repo_url }}"
#     state: present
#     update_cache: true

# - name: Install the client packages
#   yum:
#     name: "{{ item }}"
#     state: present
#     update_cache: true
#   loop:
#     - '{{ redhat_package }}'

# - name: Ensure PostgreSQL database is initialized.
#   raw: service postgresql-{{ version }} initdb
#   changed_when: true
#   when: ansible_distribution_major_version == "6"

# - name: Set bin location to setup PostgreSQL
#   set_fact:
#     setup_loc: /usr/pgsql-{{ version }}/bin/postgresql

# - name: Ensure PostgreSQL database is initialized.
#   command: "{{ setup_loc }}{{ version | replace('.', '') }}-setup initdb"
#   changed_when: true
#   when: ansible_distribution_major_version == "7"

# - name: Start postgresql
#   service:
#     name: postgresql-{{ version }}
#     state: started
#     enabled: true

# - name: Congfigure Postgresql
#   template:
#     src: centos_postgresql.j2
#     dest: /var/lib/pgsql/{{ version }}/data/postgresql.conf

# - name: Restart postgresql
#   service:
#     name: postgresql-{{ version }}
#     state: restarted